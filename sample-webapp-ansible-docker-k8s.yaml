- hosts: localhost
  tasks:
---
#Sample Ansible Playbook to build and run a Docker containers

- name: Playbook to build and run Docker
  hosts: all
  become: true
  become_user: azureuser
  gather_facts: false

  tasks:
  - name: Copy file with owner and permission, using symbolic representation
    copy:
      src: /opt/docker/
      dest: /opt/docker
      owner: azureuser
      group: azureuser
      mode: u=rwx,g=r,o=r

  - name: Get running containers
    docker_host_info:
      containers: yes
    register: docker_info

  - name: Stop running containers
    docker_container:
      name: "{{ item }}"
      state: stopped
    loop: "{{ docker_info.containers | map(attribute='Id') | list }}"

  - name: Delete all stopped containers
    shell: docker container prune -f
    ignore_errors: yes

  - name: Delete existing Docker images from the Control Node
    shell: docker rmi `docker image ls | egrep "sample-webapp-docker-image" | awk '{print$3}'` -f
    ignore_errors: yes

  - name: Build a Docker image using ABCtechnologies-1.0.war file
    docker_image:
      name: sample-webapp-docker-image
      build:
        path: /opt/docker
        pull: true
      state: present
      tag: "latest"
      force_tag: yes
      repository: karthickmuthaiyan/sample-webapp-docker-image:latest
      push: yes
      source: build
  - name: Delete existing Docker images from the Control Node
    shell: docker rmi `docker image ls | egrep "sample-webapp-docker-image" | awk '{print$3}'` -f
    ignore_errors: yes
  - name: Deploy the service
    k8s:
      state: present
      definition: "{{ lookup('template', 'k8s-service.yml') | from_yaml }}"
      validate_certs: no
      namespace: default
  - name: Deploy the application
    k8s:
      state: present
      validate_certs: no
      namespace: default
      definition: "{{ lookup('template', 'k8s-deployment.yml') | from_yaml }}"
